name: Build

on: [push, pull_request]

jobs:
  Build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows (x64), os: windows-latest, flags: -A x64 }
        - { name: Windows (x86), os: windows-latest, flags: -A Win32 }
        - { name: UWP (x64),     os: windows-latest, flags: -A x64 -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION="10.0" }
        - { name: Linux,         os: ubuntu-latest,  flags: }
        - { name: MacOS,         os: macos-latest,   flags: -DCMAKE_OSX_ARCHITECTURES=arm64\;x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11 }

    steps:
      - uses: actions/checkout@v4

      - name: Configure (CMake)
        run: >
          cmake -B build
          -DBUILD_SHARED_LIBS=1
          -DCMAKE_DISABLE_FIND_PACKAGE_HarfBuzz=1
          -DCMAKE_DISABLE_FIND_PACKAGE_PNG=1
          -DCMAKE_DISABLE_FIND_PACKAGE_ZLIB=1
          -DCMAKE_DISABLE_FIND_PACKAGE_BZip2=1
          -DCMAKE_DISABLE_FIND_PACKAGE_BrotliDec=1
          ${{ matrix.platform.flags }}
      - name: Build (CMake)
        id: build
        run: |
          cmake --build build/ --config Release --parallel

      - uses: actions/upload-artifact@v4
        with:
          name: FreeType Artifacts ${{ matrix.platform.name }}
          path: |
            build/Release/*.dll
            build/*.so
            build/*.dylib
